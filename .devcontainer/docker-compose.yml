version: '3.8'

services:
  php:
    build:
      context: ./.docker/nginx-php
      dockerfile: Dockerfile
    working_dir: /wp
    volumes:
      - wp-wordpress:/wp
      - wp-config:/wp/config
      - wp-log:/wp/log
      - ../client-mu-plugins:/wp/wp-content/client-mu-plugins
      - ../images:/wp/wp-content/images
      - ../languages:/wp/wp-content/languages
      - ../plugins:/wp/wp-content/plugins
      - ../private:/wp/wp-content/private
      - ../themes:/wp/wp-content/themes
      - ../vip-config:/wp/wp-content/vip-config
      - wp-uploads:/wp/wp-content/uploads
      - type: volume
        source: mu-plugins
        target: /wp/wp-content/mu-plugins
        volume:
          nocopy: true
    ports:
      - '80:80'
    networks:
      - default

  vip-mu-plugins:
    build:
      context: ./.docker/mu-plugins
      dockerfile: Dockerfile
    volumes:
      - 'mu-plugins:/shared'

  # elasticsearch:
  #   image: 'elasticsearch:7.17.8'
  #   command: /usr/local/bin/docker-entrypoint.sh
  #   environment:
  #     discovery.type: single-node
  #     xpack.security.enabled: 'false'
  #   volumes:
  #     - 'search_data:/usr/share/elasticsearch/data'

  # phpmyadmin:
  #   image: 'phpmyadmin/phpmyadmin:latest'
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ''
  #     PMA_HOSTS: database
  #     PMA_PORT: 3306
  #     PMA_USER: root
  #     PMA_PASSWORD: ''
  #     UPLOAD_LIMIT: '4G'
  #   ports:
  #     - 8081:80

  # mailhog:
  #   image: 'mailhog/mailhog:v1.0.1'
  #   user: root
  #   environment:
  #     MH_API_BIND_ADDR: ':80'
  #     MH_UI_BIND_ADDR: ':80'
  #   ports:
  #     - 8082:80
  #   command: MailHog

volumes:
  mu-plugins:

  wp-config:
  wp-log:
  wp-uploads:
  wp-wordpress:

  database_data:
  search_data:

networks:
  default:
